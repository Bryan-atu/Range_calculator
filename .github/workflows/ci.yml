name: CI Pipeline for Aviation Software

on:
  push:
    branches:
      - main
      - feat/range-4
  pull_request:

permissions:
  id-token: write 
  contents: read 

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y gcc make

      - name: Compile code
        run: gcc range_calculator.c test_range_calculator.c -o range_test -Wall -Wextra

      - name: Run tests
        run: ./range_test | tee test_results.log

      - name: Check for test failures
        run: grep "Assertion" test_results.log && exit 1 || echo "All tests passed"

      - name: Store test logs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log
          
      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Sign executable with cosign (OIDC)
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign-blob --yes \
            --output-signature=range_test.sig \
            --output-certificate=range_test.pem \
            range_test

      - name: Upload signed build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: signed-build
          path: |
            range_test
            range_test.sig
            range_test.pem

      - name: Verify signature using Cosign + check Rekor enry
        run: |
          # Get the SHA256 hash of the artifact
          ARTIFACT_SHA256=$(sha256sum range_test | awk '{print $1}')
          
           # Verify signature + check Rekor entry
          cosign verify-blob range_test \
            --signature=range_test.sig \
            --certificate=range_test.pem \
            --certificate-identity-regexp="^https://github.com/${{ github.repository }}/.*" \
            --certificate-oidc-issuer="https://token.actions.githubusercontent.com" \
            --rekor-url=https://rekor.sigstore.dev
    
          # Get Rekor entry details
          REKOR_ENTRY=$(cosign verify-blob range_test \
            --signature=range_test.sig \
            --certificate=range_test.pem \
            --certificate-identity-regexp="^https://github.com/${{ github.repository }}/.*" \
            --certificate-oidc-issuer="https://token.actions.githubusercontent.com" \
            --rekor-url=https://rekor.sigstore.dev | grep "tlog entry" | awk '{print $3}')
          
          echo "rekor_entry=${REKOR_ENTRY}" >> $GITHUB_OUTPUT

      - name: Generate traceability report
        run: |
          echo "Traceability report - aviation software build" > traceability_report.txt
          echo "=============================================" >> traceability_report.txt
          echo "" >> traceability_report.txt
          echo "Build Information:" >> traceability_report.txt
          echo "-----------------" >> traceability_report.txt
          echo "Build Timestamp: $(date -u)" >> traceability_report.txt
          echo "Repository: ${{ github.repository }}" >> traceability_report.txt
          echo "Workflow: ${{ github.workflow }}" >> traceability_report.txt
          echo "Commit SHA: ${{ github.sha }}" >> traceability_report.txt
          echo "Triggered by: ${{ github.actor }}" >> traceability_report.txt
          echo "Branch: ${{ github.ref_name }}" >> traceability_report.txt
          echo "" >> traceability_report.txt
          
          echo "Build Artifacts:" >> traceability_report.txt
          echo "----------------" >> traceability_report.txt
          echo "Executable: range_test" >> traceability_report.txt
          echo "SHA256: $(sha256sum range_test | awk '{print $1}')" >> traceability_report.txt
          echo "" >> traceability_report.txt
          
          echo "Verification Status:" >> traceability_report.txt
          echo "-------------------" >> traceability_report.txt
          echo "Code Signing: PASS" >> traceability_report.txt
          echo "Rekor Log Entry: ${{ steps.verify.outputs.rekor_entry }}" >> traceability_report.txt
          echo "" >> traceability_report.txt
          
          echo "Test Summary:" >> traceability_report.txt
          echo "-------------" >> traceability_report.txt
          echo "Test Status: $(grep -q "Assertion" test_results.log && echo "FAIL" || echo "PASS")" >> traceability_report.txt
          echo "Test Count: $(grep -c "Assertion" test_results.log || echo 0)" >> traceability_report.txt
          echo "" >> traceability_report.txt
          
          echo "Environment:" >> traceability_report.txt
          echo "------------" >> traceability_report.txt
          echo "Runner OS: $(uname -a)" >> traceability_report.txt
          echo "GCC Version: $(gcc --version | head -n1)" >> traceability_report.txt

      - name: Upload traceability report
        uses: actions/upload-artifact@v4
        with:
          name: traceability-report
          path: traceability_report.txt
