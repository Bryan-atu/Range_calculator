name: CI pipeline for aviation software

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write  # Required for OIDC-based authentication
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y gcc make

      - name: Compile code
        run: gcc range_calculator.c test_range_calculator.c -o range_test -Wall -Wextra

      - name: Run tests
        run: ./range_test | tee test_results.log

      - name: Check for test failures
        run: grep "Assertion" test_results.log && exit 1 || echo "All tests passed"

      - name: Store test logs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log
          
      - name: Install Cosign/Sigstore
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Sign executable with cosign (OIDC)
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign-blob --yes --output-signature range_test.sig \
            --output-certificate range_test.cert range_test \
            --oidc-client-id sigstore

      - name: Upload signed build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: signed-build
          path: |
            range_test.sig
            range_test.cert  # Upload the signed artifacts and certificate

      - name: Verify signature with Cosign
        run: |
          cosign verify-blob --signature range_test.sig --certificate range_test.cert \
            --certificate-identity "test@test.com" range_test > verification_output.txt
          echo "Signature Verified Successfully"

      - name: Retrieve Rekor log entry
        run: |
          grep "tlog index" verification_output.txt > rekor_log_entry.txt
          echo "Rekor Log Entry Recorded"

      - name: Generate traceability report
        run: |
          echo "Traceability Report - Aviation Software Build" > traceability_report.txt
          echo "Build Timestamp: $(date)" >> traceability_report.txt
          echo "Commit SHA: ${{ github.sha }}" >> traceability_report.txt
          echo "GitHub Actor: ${{ github.actor }}" >> traceability_report.txt
          echo "Verification Status: PASS" >> traceability_report.txt
          echo "Rekor Log Entry: $(cat rekor_log_entry.txt)" >> traceability_report.txt
          
      - name: Upload traceability report
        uses: actions/upload-artifact@v4
        with:
          name: traceability-report
          path: traceability_report.txt
